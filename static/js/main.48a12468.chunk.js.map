{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","task","handleSubmit","bind","handleChange","evt","preventDefault","newtodo","this","id","uuid","addTodo","setState","target","name","value","className","onSubmit","htmlFor","type","placeholder","onChange","Component","defaultProps","Todo","isEditing","isDone","toggleForm","handleUpdate","updateTodo","textDecoration","color","style","onClick","removeTodo","TodoList","todos","update","filter","todo","updatedTask","updatedTodos","map","item","deleteTodo","renderItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48a12468.chunk.js","sourcesContent":["import React, {\n    Component\n} from 'react'\nimport uuid from 'react-uuid'\nimport \"./NewTodoForm.css\"\n\nclass NewTodoForm extends Component {\n    static defaultProps = {};\n    constructor(props) {\n        super(props);\n        this.state = {\n          task : \"\"\n        \n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    const newtodo = { ...this.state, id: uuid() };\n    this.props.addTodo(newtodo);\n    this.setState({\n            task : \"\"\n          });\n  }\n    handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n    render() {\n        return (\n          <div className=\"todo-form\">\n            <form onSubmit={this.handleSubmit}>\n                <label\n                htmlFor=\"task\">Task</label>\n                <input\n                id=\"task\"\n                name=\"task\"\n                type=\"text\"\n                placeholder=\"Task\"\n                onChange={this.handleChange}\n                value={this.state.task}\n                />\n\n                <button>Add ToDo</button>\n            </form>\n            </div>\n        );\n    }\n}\n\nexport default NewTodoForm;","import React, {\n    Component\n} from 'react'\nimport \"./Todo.css\"\n\nclass Todo extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            isEditing: false,\n            task: this.props.task,\n            isDone:false\n        }\n        this.toggleForm = this.toggleForm.bind(this)\n        this.handleChange = this.handleChange.bind(this);\n        this.isDone = this.isDone.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n    }\n    toggleForm(){\n        this.setState({isEditing: !this.state.isEditing})\n    }\n    handleUpdate(evt){\n        evt.preventDefault();\n        this.props.updateTodo(this.props.id,this.state.task)\n        this.setState({isEditing:false})\n\n    }\n    handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  isDone(){\n      this.setState({isDone: !this.state.isDone})\n      \n  }\n    render() {\n        let isDone = null;\n        if (this.state.isDone){\n            isDone = {\n                textDecoration: \"line-through\",\n                color:\"gray\"\n            }\n        }\n\n        let result;\n        if(this.state.isEditing){\n            result=(\n                <div className=\"form-update\">\n                    <form className=\"form-update\" onSubmit={this.handleUpdate}>\n                        <input  type=\"text\" value={this.state.task} name=\"task\" onChange={this.handleChange}/>\n                        <button>Save</button>\n                    </form>\n                </div>\n            )\n        }else{\n            result =                         \n            <div className=\"todos\">\n            <div style={isDone} onClick={this.isDone} className=\"todos-task\">\n                {this.props.task}\n            </div>\n            <div>\n            <button onClick={this.toggleForm}>Edit</button>\n            <button onClick={this.props.removeTodo}>X</button>\n            </div>\n            </div>\n        }\n        return result\n    }\n}\n\nexport default Todo;","import React, { Component } from 'react'\nimport NewTodoForm from './NewTodoForm'\nimport Todo from './Todo'\nimport \"./TodoList.css\"\n\nclass TodoList extends Component {\n    static defaultProps = {};\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos:[]\n        };\n        this.addTodo = this.addTodo.bind(this);\n        this.update = this.update.bind(this);\n    }\n  addTodo(newtodo) {\n    this.setState(state => ({\n      todos: [...state.todos, newtodo]\n    }));\n  }\n  deleteTodo(id){\n      this.setState({\n          todos: this.state.todos.filter(todo => todo.id !== id)\n      })\n  }\nupdate(id,updatedTask){\n    const updatedTodos = this.state.todos.map(todo => {\n        if(todo.id===id){\n            return{...todo,task:updatedTask}\n        }\n        return todo\n    })\n    this.setState({todos:updatedTodos})\n}\n\n    renderItems() {\n    return (\n<div>\n        {this.state.todos.map(item => (\n            <Todo updateTodo={this.update} key={item.id} id={item.id} task={item.task} removeTodo={()=>this.deleteTodo(item.id)} />\n        ))}\n</div>\n    );\n  }\n    render() {\n        return (\n            <div className=\"basis\">\n            <h1>Todo List!</h1>\n            <h4>Add your tasks to the list:</h4>\n            <NewTodoForm addTodo={this.addTodo}/>\n            {this.renderItems()}\n            </div>\n        );\n    }\n}\n\nexport default TodoList;","import React, { Component } from 'react'\nimport './App.css';\nimport TodoList from './TodoList'\n\n\nclass App extends Component {\n  render(){\n  return (\n    <div className=\"App\">\n    <TodoList />\n    </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}