{"ast":null,"code":"var _jsxFileName = \"/Users/moni/web_dev/React/exercise/todo-app/src/Todo.js\";\nimport React, { Component } from 'react';\nimport \"./Todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      task: this.props.task,\n      isDone: false\n    };\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.isDone = this.isDone.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  }\n\n  handleUpdate(evt) {\n    evt.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({\n      isEditing: false\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  isDone() {\n    this.setState({\n      isDone: !this.state.isDone\n    });\n  }\n\n  render() {\n    let isDone = null;\n\n    if (this.state.isDone) {\n      isDone = {\n        textDecoration: \"line-through\",\n        color: \"gray\"\n      };\n    }\n\n    let result;\n\n    if (this.state.isEditing) {\n      result = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-update\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-update\",\n          onSubmit: this.handleUpdate,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.task,\n            name: \"task\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    } else {\n      result = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: isDone,\n          onClick: this.isDone,\n          className: \"todos-task\",\n          children: this.props.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.toggleForm,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.removeTodo,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    }\n\n    return result;\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/moni/web_dev/React/exercise/todo-app/src/Todo.js"],"names":["React","Component","Todo","constructor","props","state","isEditing","task","isDone","toggleForm","bind","handleChange","handleUpdate","setState","evt","preventDefault","updateTodo","id","target","name","value","render","textDecoration","color","result","removeTodo"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react'\nimport \"./Todo.css\"\n\nclass Todo extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            isEditing: false,\n            task: this.props.task,\n            isDone:false\n        }\n        this.toggleForm = this.toggleForm.bind(this)\n        this.handleChange = this.handleChange.bind(this);\n        this.isDone = this.isDone.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n    }\n    toggleForm(){\n        this.setState({isEditing: !this.state.isEditing})\n    }\n    handleUpdate(evt){\n        evt.preventDefault();\n        this.props.updateTodo(this.props.id,this.state.task)\n        this.setState({isEditing:false})\n\n    }\n    handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  isDone(){\n      this.setState({isDone: !this.state.isDone})\n      \n  }\n    render() {\n        let isDone = null;\n        if (this.state.isDone){\n            isDone = {\n                textDecoration: \"line-through\",\n                color:\"gray\"\n            }\n        }\n\n        let result;\n        if(this.state.isEditing){\n            result=(\n                <div className=\"form-update\">\n                    <form className=\"form-update\" onSubmit={this.handleUpdate}>\n                        <input  type=\"text\" value={this.state.task} name=\"task\" onChange={this.handleChange}/>\n                        <button>Save</button>\n                    </form>\n                </div>\n            )\n        }else{\n            result =                         \n            <div className=\"todos\">\n            <div style={isDone} onClick={this.isDone} className=\"todos-task\">\n                {this.props.task}\n            </div>\n            <div>\n            <button onClick={this.toggleForm}>Edit</button>\n            <button onClick={this.props.removeTodo}>X</button>\n            </div>\n            </div>\n        }\n        return result\n    }\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}